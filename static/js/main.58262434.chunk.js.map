{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Uppercase","message","About","style","backgroundColor","mode","color","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","dist","to","title","aria-label","about","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","value","onChange","event","target","rows","placeholder","newText","showAlert","navigator","clipboard","writeText","split","filter","length","trim","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.58262434.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Alert(props) {\n  const Uppercase = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{Uppercase(props.alert.type)}</strong> ! {props.alert.message}\n      </div>\n    )\n  );\n}\n","import React from \"react\";\n\nexport default function About(props) {\n  return (\n    <div\n      className=\"container \"\n      style={{\n        backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n        color: props.mode === \"light\" ? \"black\" : \"white\",\n      }}\n    >\n      <h1 className=\"my-3\">About Us</h1>\n      <div className=\"accordion\" id=\"accordionExample\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className={`accordion-button  text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n              }}\n            >\n              Read me\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div\n              className=\"accordion-body\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n                color: props.mode === \"light\" ? \"black\" : \"white\",\n              }}\n            >\n              <strong>This is the best text analyser.</strong> It is made solely\n              for learning purposes.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className={`accordion-button collapsed text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n              }}\n            >\n              Random text\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div\n              className=\"accordion-body\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n                color: props.mode === \"light\" ? \"black\" : \"white\",\n              }}\n            >\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Nulla\n              ratione mollitia unde enim sunt rem accusamus laborum quod\n              molestiae iusto possimus impedit magnam aspernatur cumque beatae,\n              qui ea ducimus? Aperiam.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              className={`accordion-button collapsed text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n              }}\n            >\n              Some more random text\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div\n              className=\"accordion-body\"\n              style={{\n                backgroundColor: props.mode === \"light\" ? \"white\" : \"#343a40\",\n                color: props.mode === \"light\" ? \"black\" : \"white\",\n              }}\n            >\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n              Necessitatibus ad optio sit et repellat possimus laudantium sunt\n              quasi. Minus amet est soluta vel, possimus quisquam cumque eveniet\n              animi repellendus harum.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {props.about}\n              </Link>\n            </li>\n          </ul>\n          {/* <form className=\"d-flex\" role=\"search\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              aria-checked=\"false\"\n              onClick={props.toggleMode}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable Dark mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  about: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"Navbar\",\n  about: \"About\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  //   setText(\"to update text\")\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Your text has been converted to uppercase\", \"success\");\n  };\n  const handleLowClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Your text has been converted to lowercase\", \"success\");\n  };\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Your text has been copied\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Your text has been cleared\", \"success\");\n  };\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"textBox\" className=\"form-label\"></label>\n          <textarea\n            className=\"form-control\"\n            id=\"textBox\"\n            value={text}\n            onChange={handleOnChange}\n            rows=\"3\"\n            placeholder=\"Enter text here\"\n            style={{\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#495057\",\n              color: props.mode === \"light\" ? \"black\" : \"white\",\n            }}\n          ></textarea>\n        </div>\n        <button\n          className={`btn btn-${\n            props.mode === \"light\" ? \"dark\" : \"light\"\n          } mx-3`}\n          onClick={handleUpClick}\n        >\n          Convert to Uppercase\n        </button>\n        <button\n          className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\n          onClick={handleLowClick}\n        >\n          Covert to Lowercase\n        </button>\n        <button\n          className={`btn btn-${\n            props.mode === \"light\" ? \"dark\" : \"light\"\n          } mx-3`}\n          onClick={handleCopyClick}\n        >\n          Copy to Clipboard\n        </button>\n        <button\n          className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\n          onClick={handleClearClick}\n        >\n          Clear\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h1>Text Summary</h1>\n        <p>\n          {text.split(\" \").filter((word) => word !== \"\").length} words and{\" \"}\n          {text.trim().length} chartacters.\n        </p>\n        <p>\n          {0.008 * text.split(\" \").filter((word) => word !== \"\").length}{\" \"}\n          mintutes to read.\n        </p>\n        <h3>Preview</h3>\n        <p>\n          {text.length > 0\n            ? text\n            : \"Enter your text above to preview it here..\"}\n        </p>\n      </div>\n    </>\n  );\n}\n","// import logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert(\n      {\n        message: message,\n        type: type,\n      },\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500)\n    );\n  };\n\n  const DarkMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Mode has been enabled\", \"dark\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Mode has been enabled\", \"light\");\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"Text Analyser\"\n          about=\"About us\"\n          mode={mode}\n          toggleMode={DarkMode}\n        />\n        <Alert alert={alert} />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<TextForm mode={mode} showAlert={showAlert} />}\n          />\n          <Route path=\"/about\" element={<About mode={mode} />} />\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}